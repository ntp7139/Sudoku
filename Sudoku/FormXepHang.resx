<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>